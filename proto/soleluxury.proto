syntax = "proto3";

package pb;

option go_package = "github.com/ebukacodes21/soleluxury-server/pb";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto"; 
import "rpc_user.proto";
import "rpc_billboard.proto";
import "rpc_category.proto";
import "rpc_store.proto";
import "rpc_size.proto";
import "rpc_color.proto";
import "rpc_product.proto";
import "rpc_order.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
      title: "Soleluxury"
      version: "1.1"
      contact: {
        name: "soleluxury"
        url: ""
        email: "soleluxuryofficial@gmail.com"
      }
    }
};

service Soleluxury {
    rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
        option (google.api.http) = {
            post: "/api/create-user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new user";
            summary: "create a new user";
        };
    }
    rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
        option (google.api.http) = {
            post: "/api/login-user"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to login a user";
            summary: "Login a user";
        };
    }
    rpc LogoutUser (google.protobuf.Empty) returns (LogoutResponse) {
        option (google.api.http) = {
            get: "/api/logout-user"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to logout user";
            summary: "Logout user";
        };
    }
    rpc CreateStore (CreateStoreRequest) returns (CreateStoreResponse) {
        option (google.api.http) = {
            post: "/api/create-store"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a new store";
            summary: "create a new store";
        };
    }
    rpc GetStore (GetStoreRequest) returns (GetStoreResponse) {
        option (google.api.http) = {
            get: "/api/get-store"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a store";
            summary: "Get a store";
        };
    }
    rpc GetFirstStore (google.protobuf.Empty) returns (GetStoreResponse) {
        option (google.api.http) = {
            get: "/api/get-first-store"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get the first store";
            summary: "Get first store";
        };
    }
    rpc GetStores (google.protobuf.Empty) returns (GetStoresResponse) {
        option (google.api.http) = {
            get: "/api/get-stores"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get stores";
            summary: "Get stores";
        };
    }
    rpc UpdateStore (UpdateStoreRequest) returns (UpdateStoreResponse) {
        option (google.api.http) = {
            patch: "/api/update-store"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update a store";
            summary: "Update a store";
        };
    }
    rpc DeleteStore (DeleteStoreRequest) returns (DeleteStoreResponse) {
        option (google.api.http) = {
            get: "/api/delete-store"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete a store";
            summary: "Delete a store";
        };
    }
    rpc CreateBillboard (CreateBillboardRequest) returns (CreateBillboardResponse) {
        option (google.api.http) = {
            post: "/api/create-billboard"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a billboard";
            summary: "Create a billboard";
        };
    }
    rpc GetBillboard (GetBillboardRequest) returns (GetBillboardResponse) {
        option (google.api.http) = {
            get: "/api/get-billboard"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a billboard";
            summary: "Get a billboard";
        };
    }
    rpc GetBillboards (GetBillboardsRequest) returns (GetBillboardsResponse) {
        option (google.api.http) = {
            get: "/api/get-billboards"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get all billboards for a store";
            summary: "Get all billboards for a store";
        };
    }
    rpc UpdateBillboard (UpdateBillboardRequest) returns (UpdateBillboardResponse) {
        option (google.api.http) = {
            patch: "/api/update-billboard"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update a billboard";
            summary: "Update a billboard";
        };
    }
    rpc DeleteBillboard (DeleteBillboardRequest) returns (DeleteBillboardResponse) {
        option (google.api.http) = {
            get: "/api/delete-billboard"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete a billboard";
            summary: "Delete a billboard";
        };
    }
    rpc CreateCategory (CreateCategoryRequest) returns (CreateCategoryResponse) {
        option (google.api.http) = {
            post: "/api/create-category"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a category";
            summary: "Create a category";
        };
    }
    rpc GetCategory (GetCategoryRequest) returns (GetCategoryResponse) {
        option (google.api.http) = {
            get: "/api/get-category"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a category";
            summary: "Get a category";
        };
    }
    rpc GetCategories (GetCategoriesRequest) returns (GetCategoriesResponse) {
        option (google.api.http) = {
            get: "/api/get-categories"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a categories to a store";
            summary: "Get categories to a store";
        };
    }
    rpc UpdateCategory (UpdateCategoryRequest) returns (UpdateCategoryResponse) {
        option (google.api.http) = {
            patch: "/api/update-category"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update a category to a store";
            summary: "Update category to a store";
        };
    }
    rpc DeleteCategory (DeleteCategoryRequest) returns (DeleteCategoryResponse) {
        option (google.api.http) = {
            get: "/api/delete-category"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete a category to a store";
            summary: "Delete category to a store";
        };
    }
    rpc CreateSize (CreateSizeRequest) returns (CreateSizeResponse) {
        option (google.api.http) = {
            post: "/api/create-size"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a size";
            summary: "Create a size";
        };
    }
    rpc GetSize (GetSizeRequest) returns (GetSizeResponse) {
        option (google.api.http) = {
            get: "/api/get-size"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a size";
            summary: "Get a size";
        };
    }
    rpc GetSizes (GetSizesRequest) returns (GetSizesResponse) {
        option (google.api.http) = {
            get: "/api/get-sizes"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a sizes to a store";
            summary: "Get sizes to a store";
        };
    }
    rpc UpdateSize (UpdateSizeRequest) returns (UpdateSizeResponse) {
        option (google.api.http) = {
            patch: "/api/update-size"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update a size to a store";
            summary: "Update size to a store";
        };
    }
    rpc DeleteSize (DeleteSizeRequest) returns (DeleteSizeResponse) {
        option (google.api.http) = {
            get: "/api/delete-size"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete a size to a store";
            summary: "Delete size to a store";
        };
    }
    rpc CreateColor (CreateColorRequest) returns (CreateColorResponse) {
        option (google.api.http) = {
            post: "/api/create-color"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a color";
            summary: "Create a color";
        };
    }
    rpc GetColor (GetColorRequest) returns (GetColorResponse) {
        option (google.api.http) = {
            get: "/api/get-color"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a color";
            summary: "Get a color";
        };
    }
    rpc GetColors (GetColorsRequest) returns (GetColorsResponse) {
        option (google.api.http) = {
            get: "/api/get-colors"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a colors to a store";
            summary: "Get colors to a store";
        };
    }
    rpc UpdateColor (UpdateColorRequest) returns (UpdateColorResponse) {
        option (google.api.http) = {
            patch: "/api/update-color"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update a color to a store";
            summary: "Update color to a store";
        };
    }
    rpc DeleteColor (DeleteColorRequest) returns (DeleteColorResponse) {
        option (google.api.http) = {
            get: "/api/delete-color"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete a color to a store";
            summary: "Delete color to a store";
        };
    }
    rpc CreateProduct (CreateProductRequest) returns (CreateProductResponse) {
        option (google.api.http) = {
            post: "/api/create-product"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to create a product";
            summary: "Create a product";
        };
    }
    rpc GetProducts (GetProductsRequest) returns (GetProductsResponse) {
        option (google.api.http) = {
            get: "/api/get-products"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get products";
            summary: "Get products";
        };
    }
    rpc GetCategoryProducts (GetCategoryProductsRequest) returns (GetCategoryProductsResponse) {
        option (google.api.http) = {
            get: "/api/get-category-products"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get products of a category";
            summary: "Get category products";
        };
    }
    rpc GetProduct (GetProductRequest) returns (GetProductResponse) {
        option (google.api.http) = {
            get: "/api/get-product"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get a product";
            summary: "Get a product";
        };
    }
    rpc UpdateProduct (UpdateProductRequest) returns (UpdateProductResponse) {
        option (google.api.http) = {
            patch: "/api/update-product"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to update a product";
            summary: "Update a product";
        };
    }
    rpc DeleteProduct (DeleteProductRequest) returns (DeleteProductResponse) {
        option (google.api.http) = {
            get: "/api/delete-product"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to delete a product";
            summary: "Delete product";
        };
    }
    rpc GetOrders (GetOrdersRequest) returns (GetOrdersResponse) {
        option (google.api.http) = {
            get: "/api/get-orders"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            description: "Use this API to get orders";
            summary: "Get orders";
        };
    }
}